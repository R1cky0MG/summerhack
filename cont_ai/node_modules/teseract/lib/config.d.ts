import { Infer } from "superstruct";
declare const ConfigStruct: import("superstruct").Struct<{
    style: {
        quotes: "double" | "single";
        indentation: number;
    };
    profiles: Record<string, Record<string, string>>;
    serve: {
        port: number;
        host: string;
    };
    build: {
        loaders: Record<string, "file" | "other">;
        externalDependencies: string[];
    };
}, {
    profiles: import("superstruct").Struct<Record<string, Record<string, string>>, null>;
    serve: import("superstruct").Struct<{
        port: number;
        host: string;
    }, {
        port: import("superstruct").Struct<number, null>;
        host: import("superstruct").Struct<string, null>;
    }>;
    style: import("superstruct").Struct<{
        quotes: "double" | "single";
        indentation: number;
    }, {
        indentation: import("superstruct").Struct<number, null>;
        quotes: import("superstruct").Struct<"double" | "single", null>;
    }>;
    build: import("superstruct").Struct<{
        loaders: Record<string, "file" | "other">;
        externalDependencies: string[];
    }, {
        loaders: import("superstruct").Struct<Record<string, "file" | "other">, null>;
        externalDependencies: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
    }>;
}>;
export type Config = Infer<typeof ConfigStruct>;
export declare function getConfig(): Promise<Config>;
export {};
