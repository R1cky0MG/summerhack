"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
exports.__esModule = true;
var fs = __importStar(require("fs/promises"));
var pathUtils = __importStar(require("path"));
var config_1 = require("../config");
function default_1() {
    return __awaiter(this, void 0, void 0, function () {
        var config, tab, json, loaderExtensions, completeFiles, _i, completeFiles_1, _a, path, content;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, (0, config_1.getConfig)()];
                case 1:
                    config = _b.sent();
                    tab = function () { return Array(config.style.indentation + 1).join(' '); };
                    json = function (data) { return JSON.stringify(data, null, config.style.indentation); };
                    loaderExtensions = function () { return Object.entries(config.build.loaders)
                        .filter(function (_a) {
                        var _ = _a[0], type = _a[1];
                        return type === 'file';
                    })
                        .map(function (_a) {
                        var ext = _a[0];
                        return ext;
                    }); };
                    completeFiles = [
                        ['tsconfig.json', function () { return json({
                                "compilerOptions": {
                                    "esModuleInterop": true,
                                    "strict": true,
                                    "jsx": "react",
                                    "paths": {
                                        "@/*": ["./src/*"]
                                    }
                                },
                                "include": ["src/**/*"]
                            }); }],
                        ['.eslintrc.json', function () { return json({
                                "env": {
                                    "browser": true,
                                    "es2021": true
                                },
                                "extends": [
                                    "eslint:recommended",
                                    "plugin:@typescript-eslint/eslint-recommended",
                                    "plugin:@typescript-eslint/recommended",
                                ],
                                "parser": "@typescript-eslint/parser",
                                "parserOptions": {
                                    "ecmaVersion": 12,
                                    "sourceType": "module"
                                },
                                "plugins": [
                                    "@typescript-eslint",
                                ],
                                "rules": {
                                    "quotes": ["error", config.style.quotes],
                                    "indent": ["error", config.style.indentation],
                                    "@typescript-eslint/explicit-module-boundary-types": "off"
                                }
                            }); }],
                        ['.prettierrc.json', function () { return json({
                                "tabWidth": config.style.indentation,
                                "singleQuote": config.style.quotes === "single"
                            }); }],
                        ['.vscode/extensions.json', function () { return json({
                                "recommendations": [
                                    "dbaeumer.vscode-eslint",
                                    "amodio.toggle-excluded-files",
                                    "esbenp.prettier-vscode"
                                ]
                            }); }],
                        ['.vscode/launch.json', function () { return json({
                                "version": "0.2.0",
                                "configurations": [
                                    {
                                        "type": "node-terminal",
                                        "name": "Test",
                                        "request": "launch",
                                        "command": "npm exec teseract test && exit",
                                        "cwd": "${workspaceFolder}"
                                    }
                                ]
                            }); }],
                        ['.vscode/settings.json', function () { return json({
                                "editor.detectIndentation": false,
                                "editor.tabSize": config.style.indentation,
                                "eslint.format.enable": true,
                                "[typescript]": {
                                    "editor.defaultFormatter": "esbenp.prettier-vscode"
                                },
                                "[typescriptreact]": {
                                    "editor.defaultFormatter": "esbenp.prettier-vscode"
                                },
                                "[javascript]": {
                                    "editor.defaultFormatter": "esbenp.prettier-vscode"
                                },
                                "[javascriptreact]": {
                                    "editor.defaultFormatter": "esbenp.prettier-vscode"
                                },
                                "[json]": {
                                    "editor.defaultFormatter": "vscode.json-language-features",
                                    "files.insertFinalNewline": true
                                },
                                "[jsonc]": {
                                    "editor.defaultFormatter": "vscode.json-language-features",
                                    "files.insertFinalNewline": true
                                },
                                "[scss]": {
                                    "editor.defaultFormatter": "vscode.css-language-features",
                                    "files.insertFinalNewline": true
                                },
                                "[css]": {
                                    "editor.defaultFormatter": "vscode.css-language-features",
                                    "files.insertFinalNewline": true
                                },
                                "[html]": {
                                    "editor.defaultFormatter": "vscode.html-language-features",
                                    "files.insertFinalNewline": true
                                },
                                "files.exclude": __assign({ "node_modules": true, "package-lock.json": true, ".vscode": true }, Object.fromEntries(completeFiles.map(function (_a) {
                                    var path = _a[0];
                                    return [path, true];
                                })))
                            }); }],
                    ];
                    _i = 0, completeFiles_1 = completeFiles;
                    _b.label = 2;
                case 2:
                    if (!(_i < completeFiles_1.length)) return [3 /*break*/, 5];
                    _a = completeFiles_1[_i], path = _a[0], content = _a[1];
                    return [4 /*yield*/, writeCompleteFile(path, content())];
                case 3:
                    _b.sent();
                    _b.label = 4;
                case 4:
                    _i++;
                    return [3 /*break*/, 2];
                case 5: return [4 /*yield*/, writePartialFile({
                        path: 'src/index.d.ts',
                        name: 'definitions',
                        commentPrefix: '// ',
                        content: lines(loaderExtensions().map(function (ext) { return "\ndeclare module \"*".concat(ext, "\" {\n").concat(tab(), "const content: string;\n").concat(tab(), "export default content;\n}\n        ").trim(); }))
                    })];
                case 6:
                    _b.sent();
                    return [4 /*yield*/, writePartialFile({
                            path: '.gitignore',
                            name: 'gitignore',
                            commentPrefix: '# ',
                            content: lines(__spreadArray([
                                '/node_modules',
                                '/dist'
                            ], completeFiles.map(function (_a) {
                                var path = _a[0];
                                return path;
                            }), true))
                        })];
                case 7:
                    _b.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports["default"] = default_1;
function lines(content) {
    return content.join('\n');
}
function writeCompleteFile(path, content) {
    return __awaiter(this, void 0, void 0, function () {
        var fullPath;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    fullPath = pathUtils.join(process.cwd(), path);
                    return [4 /*yield*/, fs.mkdir(pathUtils.dirname(fullPath), { recursive: true })];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, fs.writeFile(pathUtils.join(process.cwd(), path), content)];
                case 2:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function writePartialFile(args) {
    return __awaiter(this, void 0, void 0, function () {
        var initialMessage, delimiterStart, delimiterEnd, fullContent, delimiterStartPosition, delimiterEndPosition, contentPosition, contentLength, newFullContent;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    initialMessage = longComment('This file has been generated by teseract, but can be modified as long as the section between comments GENERATED and END GENERATED (including the comments) is not removed', { maxColumn: 80, preLine: args.commentPrefix });
                    delimiterStart = "".concat(args.commentPrefix, "GENERATED teseract ").concat(args.name);
                    delimiterEnd = "".concat(args.commentPrefix, "END GENERATED teseract ").concat(args.name);
                    return [4 /*yield*/, fileExists(args.path)];
                case 1:
                    if (!!(_a.sent())) return [3 /*break*/, 3];
                    return [4 /*yield*/, writeCompleteFile(args.path, [
                            initialMessage,
                            '',
                            delimiterStart,
                            delimiterEnd
                        ].join('\n'))];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3: return [4 /*yield*/, fs.readFile(pathUtils.join(process.cwd(), args.path), { encoding: 'utf-8' })];
                case 4:
                    fullContent = _a.sent();
                    delimiterStartPosition = fullContent.indexOf(delimiterStart);
                    delimiterEndPosition = fullContent.indexOf(delimiterEnd);
                    if (delimiterStartPosition === -1 || delimiterEndPosition === -1) {
                        throw new Error('Delimiters not found for ' + args.path);
                    }
                    contentPosition = delimiterStartPosition + delimiterStart.length + 1;
                    contentLength = delimiterEndPosition - 1 - contentPosition;
                    newFullContent = [
                        fullContent.slice(0, contentPosition),
                        args.content,
                        fullContent.slice(contentPosition + contentLength)
                    ].join('');
                    return [4 /*yield*/, writeCompleteFile(args.path, newFullContent)];
                case 5:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function longComment(content, options) {
    var words = content.split(' ');
    var lines = [];
    var currentLine = '';
    words.forEach(function (word, i) {
        var _a;
        if (currentLine.length !== 0) {
            currentLine += ' ';
        }
        currentLine += word;
        if (currentLine.length + (i >= (words.length - 1) ? 0 : words[i].length) >= options.maxColumn - (((_a = options.preLine) === null || _a === void 0 ? void 0 : _a.length) || 0)) {
            lines.push(currentLine);
            currentLine = '';
        }
    });
    lines.push(currentLine);
    return __spreadArray(__spreadArray([
        options.pre || null
    ], lines.map(function (l) { return "".concat(options.preLine).concat(l); }), true), [
        options.post || null
    ], false).filter(function (l) { return l !== null; }).join('\n');
}
function fileExists(path) {
    return __awaiter(this, void 0, void 0, function () {
        var statResult, _1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, fs.stat(path)];
                case 1:
                    statResult = _a.sent();
                    if (statResult.isFile())
                        return [2 /*return*/, true];
                    return [3 /*break*/, 3];
                case 2:
                    _1 = _a.sent();
                    return [2 /*return*/, false];
                case 3: return [2 /*return*/];
            }
        });
    });
}
